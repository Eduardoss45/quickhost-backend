# Generated by Django 5.1.3 on 2024-11-30 21:54

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_user', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('social_name', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id_booking', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_bookings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='useraccount',
            name='registered_accommodation_bookings',
            field=models.ManyToManyField(blank=True, to='data.booking'),
        ),
        migrations.CreateModel(
            name='PropertyListing',
            fields=[
                ('id_accommodation', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consecutive_days_limit', models.IntegerField(blank=True, help_text='NÃºmero de dias consecutivos permitido. Deixe em branco para ilimitado.', null=True)),
                ('main_cover_image', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('internal_images', models.JSONField(blank=True, default=list, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3)),
                ('discount', models.BooleanField(default=False)),
                ('cleaning_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('price_per_night', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('category', models.CharField(choices=[('inn', 'Inn'), ('chalet', 'Chalet'), ('apartment', 'Apartment'), ('home', 'Home'), ('room', 'Room')], default='inn', max_length=50)),
                ('room_count', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('bed_count', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('bathroom_count', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('guest_capacity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('space_type', models.CharField(choices=[('full_space', 'Full Space'), ('limited_space', 'Limited Space')], default='full_space', max_length=50)),
                ('address', models.CharField(default='Not informed', max_length=255)),
                ('city', models.CharField(default='Not informed', max_length=100)),
                ('neighborhood', models.CharField(default='Not informed', max_length=100)),
                ('postal_code', models.CharField(default='Not informed', max_length=10)),
                ('uf', models.CharField(blank=True, default='Not informed', max_length=10)),
                ('wifi', models.BooleanField(default=False)),
                ('tv', models.BooleanField(default=False)),
                ('kitchen', models.BooleanField(default=False)),
                ('washing_machine', models.BooleanField(default=False)),
                ('parking_included', models.BooleanField(default=False)),
                ('air_conditioning', models.BooleanField(default=False)),
                ('pool', models.BooleanField(default=False)),
                ('jacuzzi', models.BooleanField(default=False)),
                ('grill', models.BooleanField(default=False)),
                ('private_gym', models.BooleanField(default=False)),
                ('beach_access', models.BooleanField(default=False)),
                ('smoke_detector', models.BooleanField(default=False)),
                ('fire_extinguisher', models.BooleanField(default=False)),
                ('first_aid_kit', models.BooleanField(default=False)),
                ('outdoor_camera', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accommodations', to=settings.AUTH_USER_MODEL)),
                ('registered_accommodation_bookings', models.ManyToManyField(blank=True, to='data.propertylisting')),
                ('registered_user_bookings', models.ManyToManyField(blank=True, related_name='registered_accommodations', to='data.booking')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='accommodation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accommodation_bookings', to='data.propertylisting'),
        ),
        migrations.AddField(
            model_name='useraccount',
            name='registered_accommodations',
            field=models.ManyToManyField(blank=True, related_name='users_registered', to='data.propertylisting'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id_review', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField()),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accommodation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='data.propertylisting')),
                ('user_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteProperty',
            fields=[
                ('id_favorite_property', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_favorite_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('accommodation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.propertylisting')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user_favorite_property', 'accommodation'), name='unique_user_accommodation_favorite')],
            },
        ),
    ]
